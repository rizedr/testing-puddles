// This file is auto-generated by @hey-api/openapi-ts

import { createClient, createConfig, type Options } from '@hey-api/client-fetch';
import type { HealthData, HealthResponse, PlayerActionData, PlayerActionError, PlayerActionResponse2, PanicData, PanicError, ArchiveGameData, ArchiveGameError, VoteDealChoiceData, VoteDealChoiceError, GenerateShareGameImageData, GenerateShareGameImageError, GetDepositsData, GetDepositsError, GetDepositsResponse, GetWithdrawalQuoteData, GetWithdrawalQuoteError, GetWithdrawalQuoteResponse } from './types.gen';

export const client = createClient(createConfig({
    throwOnError: true
}));

/**
 * Health
 */
export const health = <ThrowOnError extends boolean = true>(options?: Options<HealthData, ThrowOnError>) => {
    return (options?.client ?? client).get<HealthResponse, unknown, ThrowOnError>({
        ...options,
        url: '/health'
    });
};

/**
 * Player Action
 */
export const playerAction = <ThrowOnError extends boolean = true>(options: Options<PlayerActionData, ThrowOnError>) => {
    return (options?.client ?? client).post<PlayerActionResponse2, PlayerActionError, ThrowOnError>({
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        },
        url: '/game/{game_id}/player_action'
    });
};

/**
 * Panic
 */
export const panic = <ThrowOnError extends boolean = true>(options: Options<PanicData, ThrowOnError>) => {
    return (options?.client ?? client).get<unknown, PanicError, ThrowOnError>({
        ...options,
        url: '/game/{game_id}/panic'
    });
};

/**
 * Archive Game
 */
export const archiveGame = <ThrowOnError extends boolean = true>(options: Options<ArchiveGameData, ThrowOnError>) => {
    return (options?.client ?? client).post<unknown, ArchiveGameError, ThrowOnError>({
        ...options,
        url: '/game/{game_id}/archive'
    });
};

/**
 * Vote Deal Choice
 * API for players to vote on runout deal choice
 */
export const voteDealChoice = <ThrowOnError extends boolean = true>(options: Options<VoteDealChoiceData, ThrowOnError>) => {
    return (options?.client ?? client).post<unknown, VoteDealChoiceError, ThrowOnError>({
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        },
        url: '/game/{game_id}/vote_deal_choice'
    });
};

/**
 * Generate Share Game Image
 */
export const generateShareGameImage = <ThrowOnError extends boolean = true>(options: Options<GenerateShareGameImageData, ThrowOnError>) => {
    return (options?.client ?? client).post<unknown, GenerateShareGameImageError, ThrowOnError>({
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        },
        url: '/game/{game_id}/download_image'
    });
};

/**
 * Get Deposits
 */
export const getDeposits = <ThrowOnError extends boolean = true>(options: Options<GetDepositsData, ThrowOnError>) => {
    return (options?.client ?? client).post<GetDepositsResponse, GetDepositsError, ThrowOnError>({
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        },
        url: '/analytics/deposits'
    });
};

/**
 * Get Withdrawal Quote
 */
export const getWithdrawalQuote = <ThrowOnError extends boolean = true>(options: Options<GetWithdrawalQuoteData, ThrowOnError>) => {
    return (options?.client ?? client).post<GetWithdrawalQuoteResponse, GetWithdrawalQuoteError, ThrowOnError>({
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        },
        url: '/analytics/get_withdrawal_quote'
    });
};